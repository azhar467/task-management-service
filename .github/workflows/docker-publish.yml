name: Build and Push Docker Image to ECR

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  push_to_ecr:
    if: github.actor != 'local-profile'  # Exclude local profile
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code (for Dockerfile and other files)
      - uses: actions/checkout@v3

      # Step 2: Download the built JAR artifact from the previous job
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: task-management-service-jar

      # Step 3: Verify the JAR is downloaded
      - name: Verify JAR downloaded
        run: ls .

      # Step 4: Configure AWS Credentials for ECR
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t azhar467/task-management-service:latest .

      # Step 6: Login to ECR
      - name: Login to ECR
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 789761962952.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 7: Tag and Push Docker Image to ECR
      - name: Push Docker Image to ECR
        run: |
          docker tag azhar467/task-management-service:latest 789761962952.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/azhar467/task-management-service:latest
          docker push 789761962952.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/azhar467/task-management-service:latest